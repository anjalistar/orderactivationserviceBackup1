<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Send the request to the external service for Prod</description>
        <name>Post_to_Slack_Workflow_Production</name>
        <label>Post to Slack Workflow - Production</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>SlackAgencyMatchmakingLead.postWorkflowsT030abj1fA06cj7adf0v494813745810294716S0CPhDE90EJP7yct3K5tPWtj</actionName>
        <actionType>externalService</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>slackMessageRequest</name>
            <value>
                <elementReference>Slack_Request_Production</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SlackAgencyMatchmakingLead.postWorkflowsT030abj1fA06cj7adf0v494813745810294716S0CPhDE90EJP7yct3K5tPWtj</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Send the request to the external service for Sandbox</description>
        <name>Post_to_Slack_Workflow_Sandbox</name>
        <label>Post to Slack Workflow - Sandbox</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>SlackAgencyMatchmakingLeadSandbox.postWorkflowsT030abj1fA06cm4u9yaw4948134238387118085Oormg8g70qrGWkmAe3EQ9zv</actionName>
        <actionType>externalService</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>slackMessageRequest</name>
            <value>
                <elementReference>Slack_Request_Sandbox</elementReference>
            </value>
        </inputParameters>
        <nameSegment>SlackAgencyMatchmakingLeadSandbox.postWorkflowsT030abj1fA06cm4u9yaw4948134238387118085Oormg8g70qrGWkmAe3EQ9zv</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Use the Fallback text to send to Slack as Task.Description was not populated.</description>
        <name>Assign_Fallback_Description_to_Request_Message</name>
        <label>Assign Fallback Description to Request Message</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No Details Provided!</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Which_Channel_to_Notify</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Use the Task Description to send to Slack</description>
        <name>Assign_Task_Description_to_Request_Message</name>
        <label>Assign Task Description to Request Message</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Trimmed_Task_Description</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Which_Channel_to_Notify</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Build the request to send to the Slack workflow for Prod</description>
        <name>Generate_Slack_Request_Production</name>
        <label>Generate Slack Request - Production</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>Slack_Request_Production.message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Message</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Slack_Request_Production.taskLink</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Record_URL_Formula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Post_to_Slack_Workflow_Production</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Build the request to send to the Slack workflow for Sandbox</description>
        <name>Generate_Slack_Request_Sandbox</name>
        <label>Generate Slack Request - Sandbox</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>Slack_Request_Sandbox.message</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Message</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Slack_Request_Sandbox.taskLink</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Record_URL_Formula</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Post_to_Slack_Workflow_Sandbox</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Verify Task.Description is populated, otherwise use fallback Text. This ensures we send something to the Slack workflow, otherwise it may fail silently.</description>
        <name>Check_for_Task_Description</name>
        <label>Check for Task Description</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Assign_Fallback_Description_to_Request_Message</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Description Not Populated</defaultConnectorLabel>
        <rules>
            <name>Description_Populated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Task_Details.Description</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Task_Description_to_Request_Message</targetReference>
            </connector>
            <label>Description Populated</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the Org is a Sandbox or Prod, send to different channels accordingly, so as not to create noise for real end users when testing.</description>
        <name>Which_Channel_to_Notify</name>
        <label>Which Channel to Notify</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>Generate_Slack_Request_Sandbox</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Sandbox</defaultConnectorLabel>
        <rules>
            <name>Production</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Organization_Details.IsSandbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Generate_Slack_Request_Production</targetReference>
            </connector>
            <label>Production</label>
        </rules>
    </decisions>
    <description>Platform Event triggered Flow that runs when an Agency Matchmaking Lead is received. The Platform Event is published by a core record triggering flow on Task. This Flow will use registered External Services to send Task data from Salesforce to the app-agency-matchmaking-leads Slack channel.</description>
    <environments>Default</environments>
    <formulas>
        <name>Record_URL_Formula</name>
        <dataType>String</dataType>
        <expression>LEFT({!$Api.Partner_Server_URL_260}, FIND( &apos;/services&apos;, {!$Api.Partner_Server_URL_260})) &amp; {!Get_Task_Details.Id}</expression>
    </formulas>
    <formulas>
        <name>Trimmed_Task_Description</name>
        <dataType>String</dataType>
        <expression>TRIM( LEFT({!Get_Task_Details.Description} , FIND( &quot;GA Client ID&quot;, {!Get_Task_Details.Description}) -1 ) )</expression>
    </formulas>
    <interviewLabel>Agency Matchmaking Lead Slack Notification {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Agency Matchmaking Lead Slack Notification</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Query info about the Org, we will take different action if its a Sandbox rather than Prod</description>
        <name>Get_Organization_Details</name>
        <label>Get Organization Details</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Task_Details</targetReference>
        </connector>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Organization</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Query the Task received from the Task Main Flow</description>
        <name>Get_Task_Details</name>
        <label>Get Task Details</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_for_Task_Description</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Task_ID__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Organization_Details</targetReference>
        </connector>
        <flowRunAsUser>TriggeringUser</flowRunAsUser>
        <object>Agency_Matchmaking_Lead_Slack__e</object>
        <triggerType>PlatformEvent</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Message</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Slack_Request_Production</name>
        <apexClass>ExternalService__SlackAgencyMatchmakingLead_SlackMessageRequest</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Slack_Request_Sandbox</name>
        <apexClass>ExternalService__SlackAgencyMatchmakingLeadSandbox_SlackMessageRequest</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
