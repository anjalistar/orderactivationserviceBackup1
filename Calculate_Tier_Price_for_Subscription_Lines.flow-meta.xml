<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Output_Currency_Value</name>
        <label>Assign Output Currency Value</label>
        <locationX>1238</locationX>
        <locationY>1682</locationY>
        <assignmentItems>
            <assignToReference>CurrOutputPriceValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>tempPricingValue</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_OutPut_Pricing_Value</name>
        <label>Assign OutPut Pricing Value</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <assignmentItems>
            <assignToReference>CurrOutputPriceValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Price_Tier_Records_for_Volume.Value__c</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Previous_Quantity</name>
        <label>Assign Previous Quantity</label>
        <locationX>1898</locationX>
        <locationY>1370</locationY>
        <assignmentItems>
            <assignToReference>numPreviousQTY</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>for_Each_Price_Tier.Above_From_Quantity__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>for_Each_Price_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Price_Plan_Id</name>
        <label>Assign Price Plan Id</label>
        <locationX>2030</locationX>
        <locationY>1094</locationY>
        <assignmentItems>
            <assignToReference>txtPricePlanId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>for_Each_Price_Tier.Price_Plan__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_Price_Tier_Records_for_Volume</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Qty_for_Calculation</name>
        <label>Assign Qty for Calculation</label>
        <locationX>1238</locationX>
        <locationY>614</locationY>
        <assignmentItems>
            <assignToReference>NumQtyforCalc</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NumQuantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>for_Each_Price_Tier</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Rate_Calculation_Value</name>
        <label>Assign Rate Calculation Value</label>
        <locationX>1502</locationX>
        <locationY>1094</locationY>
        <assignmentItems>
            <assignToReference>tempPricingValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>calcTempRatePriceforTier</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NumQtyforCalc</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>calcTempQuantityforRate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Previous_Quantity</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Rate_Total_Calculation_Value</name>
        <label>Assign Rate Total Calculation Value</label>
        <locationX>314</locationX>
        <locationY>518</locationY>
        <assignmentItems>
            <assignToReference>CurrOutputPriceValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TempCalcPrice4VolumeRate</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Temp_Price_Value</name>
        <label>Assign Temp Price Value</label>
        <locationX>1766</locationX>
        <locationY>1094</locationY>
        <assignmentItems>
            <assignToReference>tempPricingValue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>calcTempPricingValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Previous_Quantity</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_for_Pricing_Option</name>
        <label>Check for Pricing Option</label>
        <locationX>182</locationX>
        <locationY>398</locationY>
        <defaultConnector>
            <targetReference>Assign_Rate_Total_Calculation_Value</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Fixed_Amount01</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Price_Tier_Records_for_Volume.Pricing_Option__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fixed Amount</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_OutPut_Pricing_Value</targetReference>
            </connector>
            <label>Fixed Amount</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Price_Plan_Type_Exists</name>
        <label>Check if Price Plan Type Exists?</label>
        <locationX>710</locationX>
        <locationY>158</locationY>
        <defaultConnector>
            <targetReference>Check_if_Price_Tier_is_Null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Volume</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PricePLanType</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>PricePLanType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Volume</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Price_Tier_Records_for_Volume</targetReference>
            </connector>
            <label>Yes - Volume</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Price_Tier_is_Null</name>
        <label>Check if Price Tier is Null</label>
        <locationX>1238</locationX>
        <locationY>278</locationY>
        <defaultConnector>
            <targetReference>Get_Price_Tier_Records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_NuLL</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>colPriceTierRecords</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Qty_for_Calculation</targetReference>
            </connector>
            <label>Not NuLL</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Previous_QTY</name>
        <label>Check Previous QTY</label>
        <locationX>1612</locationX>
        <locationY>854</locationY>
        <defaultConnector>
            <targetReference>Check_the_Pricing_Options</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Prev_qty_equals_current_Qty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Above_From_Quantity__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>numPreviousQTY</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>for_Each_Price_Tier</targetReference>
            </connector>
            <label>Prev qty equals current Qty</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_the_Pricing_Options</name>
        <label>Check the Pricing Options?</label>
        <locationX>1898</locationX>
        <locationY>974</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Rate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Pricing_Option__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rate</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Price_Plan_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tiered</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Rate_Calculation_Value</targetReference>
            </connector>
            <label>Tiered/Rate</label>
        </rules>
        <rules>
            <name>Fixed_Amount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Pricing_Option__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fixed Amount</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Price_Plan_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Tiered</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Temp_Price_Value</targetReference>
            </connector>
            <label>Tiered/Fixed Amount</label>
        </rules>
        <rules>
            <name>Volume</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>for_Each_Price_Tier.Price_Plan_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Volume</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Price_Plan_Id</targetReference>
            </connector>
            <label>Volume</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>calcTempPricingValue</name>
        <dataType>Currency</dataType>
        <expression>{!tempPricingValue} + {!for_Each_Price_Tier.Value__c}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>calcTempQuantityforRate</name>
        <dataType>Number</dataType>
        <expression>({!NumQtyforCalc} - ({!NumQtyforCalc} - {!for_Each_Price_Tier.Above_From_Quantity__c}))</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>calcTempRatePriceforTier</name>
        <dataType>Currency</dataType>
        <expression>(({!NumQtyforCalc} - {!for_Each_Price_Tier.Above_From_Quantity__c}) * {!for_Each_Price_Tier.Value__c}) + {!tempPricingValue}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>TempCalcPrice4VolumeRate</name>
        <dataType>Currency</dataType>
        <expression>{!NumQuantity} * {!Get_Price_Tier_Records_for_Volume.Value__c}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>Calculate Tier Price for Subscription Lines {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Calculate Tier Price for Subscription Lines</label>
    <loops>
        <name>for_Each_Price_Tier</name>
        <label>for Each Price Tier</label>
        <locationX>1238</locationX>
        <locationY>734</locationY>
        <collectionReference>colPriceTierRecords</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_Previous_QTY</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Output_Currency_Value</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Price_Tier_Records</name>
        <label>Get Price Tier Records</label>
        <locationX>1326</locationX>
        <locationY>398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Qty_for_Calculation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Price_Plan__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>txtPricePlanId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Above_From_Quantity__c</field>
            <operator>LessThan</operator>
            <value>
                <elementReference>NumQuantity</elementReference>
            </value>
        </filters>
        <filters>
            <field>isinactive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Price_Tier__c</object>
        <outputReference>colPriceTierRecords</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Above_From_Quantity__c</queriedFields>
        <queriedFields>Maximum_Amount__c</queriedFields>
        <queriedFields>Minimum_Account__c</queriedFields>
        <queriedFields>Value__c</queriedFields>
        <queriedFields>Tier_Id__c</queriedFields>
        <queriedFields>Pricing_Option__c</queriedFields>
        <queriedFields>Price_Plan_Type__c</queriedFields>
        <queriedFields>Price_Plan__c</queriedFields>
        <sortField>Above_From_Quantity__c</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordLookups>
        <name>Get_Price_Tier_Records_for_Volume</name>
        <label>Get Price Tier Records for Volume</label>
        <locationX>182</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_for_Pricing_Option</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Price_Plan__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>txtPricePlanId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Above_From_Quantity__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>NumQuantity</elementReference>
            </value>
        </filters>
        <filters>
            <field>isinactive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Price_Tier__c</object>
        <sortField>Above_From_Quantity__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>584</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_if_Price_Plan_Type_Exists</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>colPriceTierRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Price_Tier__c</objectType>
    </variables>
    <variables>
        <name>CurrOutputPriceValue</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>numPreviousQTY</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>-1.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>NumQtyforCalc</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>NumQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>PricePLanType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>tempPricingValue</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>tempQuantityforRatesCalculation</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>txtPricePlanId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
